{"version":3,"file":"component---src-pages-index-js-828879aa0c3a7ea9c878.js","mappings":"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","sources":["webpack://gatsby-clean-blog-starter/./src/components/title/index.js","webpack://gatsby-clean-blog-starter/./src/components/content-Item/index.js","webpack://gatsby-clean-blog-starter/./src/components/pagination/index.js","webpack://gatsby-clean-blog-starter/./src/components/content-list/index.js","webpack://gatsby-clean-blog-starter/./src/hooks/usePosts.js","webpack://gatsby-clean-blog-starter/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst Title = () => {\r\n  const titleQuery = useStaticQuery(graphql`\r\n    query TitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const { title } = titleQuery.site.siteMetadata;\r\n\r\n  return <div className=\"title\">{title}</div>;\r\n};\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { navigate } from \"gatsby\";\r\nimport qs from \"query-string\";\r\n\r\nimport { CATEGORY, CONTENTITEM } from \"../../constants\";\r\nimport \"./index.scss\";\r\n\r\nexport const ContentItem = ({ post }) => {\r\n  const { frontmatter, fields, excerpt } = post.node;\r\n  const { TITLE, SUBTITLE, DATE, CONTENT } = CONTENTITEM;\r\n  const handleClick = () => {\r\n    const category = CATEGORY.ALL;\r\n    navigate(`${fields.slug}?${qs.stringify({ category })}#blog`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"contentItem\"\r\n      onClick={handleClick}\r\n      onKeyDown={handleClick}\r\n      role=\"presentation\"\r\n    >\r\n      {TITLE && <h4 className=\"h4 itemTitle\">{frontmatter.title}</h4>}\r\n      {SUBTITLE && <p className=\"h5 itemSubTitle\">{frontmatter.subtitle}</p>}\r\n      {CONTENT && (\r\n        <div\r\n          className=\"body-1 itemText\"\r\n          dangerouslySetInnerHTML={{ __html: excerpt }}\r\n        />\r\n      )}\r\n      {DATE && <p className=\"body-2 itemDate\">{frontmatter.date}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ChevronLeft } from \"../../../assets/icons/chevronLeft\";\r\nimport { ChevronRight } from \"../../../assets/icons/chevronRight\";\r\nimport { DOTS } from \"../../constants/page\";\r\nimport \"./index.scss\";\r\n\r\nexport const Pagination = (props) => {\r\n  const { paginationRange, currentPage, handlePageChange } = props;\r\n\r\n  let lastPage =\r\n    paginationRange && paginationRange[paginationRange?.length - 1];\r\n\r\n  if (currentPage === 0 || paginationRange?.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const handleNext = () => {\r\n    handlePageChange(currentPage + 1);\r\n  };\r\n  const handlePrev = () => {\r\n    handlePageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <ul className=\"paginationButtons\">\r\n        <li\r\n          className=\"paginationArrow\"\r\n          data-disabled={currentPage === 1}\r\n          onClick={handlePrev}\r\n        >\r\n          <ChevronLeft />\r\n        </li>\r\n        <ul className=\"paginationPages\">\r\n          {paginationRange?.map((page, index) => {\r\n            if (page === DOTS) {\r\n              return <li className=\"paginationDots\">&#8230;</li>;\r\n            }\r\n            return (\r\n              <li\r\n                key={index}\r\n                className=\"paginationPage\"\r\n                data-current={currentPage === page}\r\n                onClick={() => handlePageChange(page)}\r\n              >\r\n                {page}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <li\r\n          className=\"paginationArrow\"\r\n          data-disabled={currentPage === lastPage}\r\n          onClick={handleNext}\r\n        >\r\n          <ChevronRight />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { ContentItem } from \"../content-Item\";\r\nimport { Pagination } from \"../pagination\";\r\nimport { PAGE } from \"../../constants\";\r\n\r\nconst ContentList = ({\r\n  filteredPosts,\r\n  paginationRange,\r\n  currentPage,\r\n  handlePageChange,\r\n}) => {\r\n  const firstPageIndex = (currentPage - 1) * PAGE.PAGESIZE;\r\n  const lastPageIndex = firstPageIndex + PAGE.PAGESIZE;\r\n  let finalPosts = filteredPosts.slice(firstPageIndex, lastPageIndex);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"listContainer\">\r\n        {finalPosts.map((post, index) => (\r\n          <ContentItem key={index} post={post} />\r\n        ))}\r\n      </div>\r\n      <Pagination\r\n        paginationRange={paginationRange}\r\n        currentPage={currentPage}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ContentList;\r\n","import { useMemo } from \"react\";\r\nimport { CATEGORY } from \"../constants/category\";\r\n\r\nexport const usePosts = ({ posts, selectedCategory }) => {\r\n  const splitedSearch = selectedCategory?.split(\"/\");\r\n  const isRootDirectory = splitedSearch?.length <= 1;\r\n\r\n  const filteredPosts = useMemo(\r\n    () =>\r\n      posts.filter(({ node }) => {\r\n        let slug = node.fields.slug.toLowerCase();\r\n        let splitedSlug = slug?.split(\"/\").filter(Boolean);\r\n\r\n        return (\r\n          selectedCategory === CATEGORY.ALL ||\r\n          (isRootDirectory && splitedSearch?.[0] === splitedSlug[0]) ||\r\n          (!isRootDirectory &&\r\n            splitedSearch?.[0] === splitedSlug[0] &&\r\n            slug.includes(selectedCategory))\r\n        );\r\n      }),\r\n    [selectedCategory]\r\n  );\r\n\r\n  return { filteredPosts };\r\n};\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Bio from \"../components/bio\";\r\nimport Title from \"../components/title\";\r\nimport ContentList from \"../components/content-list\";\r\nimport { PAGE } from \"../constants/page\";\r\n\r\nimport { usePagination } from \"../hooks/usePagination\";\r\nimport { useCategory } from \"../hooks/useCategory\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\n\r\nimport { Layout } from \"../layout\";\r\nimport \"../styles/_typography.scss\";\r\nimport \"./index.scss\";\r\n\r\nexport default function Page({ data }) {\r\n  const posts = data.allMarkdownRemark.edges;\r\n  const { handleSelect, selectedCategory } = useCategory();\r\n  const { filteredPosts } = usePosts({ posts, selectedCategory });\r\n  const { paginationRange, currentPage, handlePageChange } = usePagination({\r\n    totalCount: filteredPosts.length,\r\n    siblingCount: PAGE.SIBLINGCOUNT,\r\n    pageSize: PAGE.PAGESIZE,\r\n  });\r\n\r\n  return (\r\n    <Layout\r\n      handlePageChange={handlePageChange}\r\n      handleSelect={handleSelect}\r\n      selectedCategory={selectedCategory}\r\n      currentPage={currentPage}\r\n    >\r\n      <div className=\"homeContainer\">\r\n        <Title />\r\n        <Bio />\r\n        <hr />\r\n        <ContentList\r\n          filteredPosts={filteredPosts}\r\n          paginationRange={paginationRange}\r\n          currentPage={currentPage}\r\n          handlePageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query PageQuery {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { title: { ne: \"null\" }, draft: { ne: true } } }\r\n      sort: { frontmatter: { date: DESC } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 300, truncate: true)\r\n          frontmatter {\r\n            title\r\n            subtitle\r\n            draft\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Title","titleQuery","useStaticQuery","title","site","siteMetadata","React","className","ContentItem","_ref","post","frontmatter","fields","excerpt","node","TITLE","SUBTITLE","DATE","CONTENT","CONTENTITEM","handleClick","category","CATEGORY","ALL","navigate","slug","qs","onClick","onKeyDown","role","subtitle","dangerouslySetInnerHTML","__html","date","Pagination","props","paginationRange","currentPage","handlePageChange","lastPage","length","handlePrev","ChevronLeft","map","page","index","DOTS","key","handleNext","ChevronRight","filteredPosts","firstPageIndex","PAGE","PAGESIZE","lastPageIndex","finalPosts","slice","usePosts","posts","selectedCategory","splitedSearch","split","isRootDirectory","useMemo","filter","_ref2","toLowerCase","splitedSlug","Boolean","includes","Page","data","allMarkdownRemark","edges","handleSelect","useCategory","usePagination","totalCount","siblingCount","SIBLINGCOUNT","pageSize","Layout","Bio","ContentList"],"sourceRoot":""}