{"version":3,"file":"component---src-templates-blog-post-js-06778ae39f95fe9427c8.js","mappings":"gNAWA,MARoBA,IAAkB,IAAjB,QAAEC,GAASD,EAC9B,OACEE,EAAAA,cAAA,OACEC,UAAU,qBACVC,wBAAyB,CAAEC,OAAQJ,IACnC,ECGN,MARmBD,IAAe,IAAd,KAAEM,GAAMN,EAC1B,OACEE,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,gBAAgBG,EAAKC,OACpCL,EAAAA,cAAA,OAAKC,UAAU,mBAAmBG,EAAKE,MACnC,E,wCCuCV,MAvCuBR,IAAiC,IAAhC,KAAEM,EAAI,iBAAEG,GAAkBT,EAChD,MAAM,KAAEU,EAAI,SAAEC,GAAaL,EACrBM,GAAWD,aAAQ,EAARA,EAAUE,YAAYN,QAAS,GAC1CO,GAAYJ,aAAI,EAAJA,EAAMG,YAAYN,QAAS,GAEvCQ,EAAeC,IACnB,MAAMC,EAAWR,GACjBS,EAAAA,EAAAA,IAAYF,EAAI,IAAIG,EAAAA,UAAa,CAAEF,aAAW,QAAQ,EAGxD,OACEf,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OACEkB,QAASA,KACPL,EAAYJ,aAAQ,EAARA,EAAUU,OAAOL,KAAK,GAGnCL,GACCT,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAACoB,EAAAA,EAAW,MACXV,IAIPV,EAAAA,cAAA,OACEkB,QAASA,KACPL,EAAYL,aAAI,EAAJA,EAAMW,OAAOL,KAAK,GAG/BN,GACCR,EAAAA,cAAA,OAAKC,UAAU,iBACZW,EACDZ,EAAAA,cAACqB,EAAAA,EAAY,QAIf,E,sCCEV,MA/BiBvB,IAA4B,IAA3B,KAAEM,EAAI,YAAEkB,GAAaxB,EACrC,MAAM,eAAEyB,EAAc,kBAAEC,GAAsBpB,GACxC,YAAEO,EAAW,KAAEc,GAASF,GACxB,aAAEG,EAAY,iBAAEnB,IAAqBoB,EAAAA,EAAAA,MACrC,YAAEC,EAAW,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAc,CACtDC,WAAYP,EAAkBO,WAC9BC,aAAcC,EAAAA,GAAKC,aACnBC,SAAUF,EAAAA,GAAKG,WAGjB,OACEpC,EAAAA,cAACqC,EAAAA,EAAM,CACLR,iBAAkBA,EAClBH,aAAcA,EACdnB,iBAAkBA,EAClBqB,YAAaA,GAEb5B,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAACsC,EAAU,CAAClC,KAAMO,IAClBX,EAAAA,cAACuC,EAAW,CAACxC,QAAS0B,IACtBzB,EAAAA,cAACwC,EAAc,CACbpC,KAAMkB,EACNf,iBAAkBA,IAEpBP,EAAAA,cAAA,WACAA,EAAAA,cAACyC,EAAAA,EAAG,OAEC,C","sources":["webpack://gatsby-clean-blog-starter/./src/components/post-content/index.js","webpack://gatsby-clean-blog-starter/./src/components/post-header/index.js","webpack://gatsby-clean-blog-starter/./src/components/post-navigation/index.js","webpack://gatsby-clean-blog-starter/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst PostContent = ({ content }) => {\r\n  return (\r\n    <div\r\n      className=\"body-1 postContent\"\r\n      dangerouslySetInnerHTML={{ __html: content }}\r\n    />\r\n  );\r\n};\r\nexport default PostContent;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst PostHeader = ({ data }) => {\r\n  return (\r\n    <div className=\"postHeader\">\r\n      <div className=\"h2 postTitle\">{data.title}</div>\r\n      <div className=\"body-2 postDate\">{data.date}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default PostHeader;\r\n","import React from \"react\";\r\nimport { navigate } from \"gatsby\";\r\nimport qs from \"query-string\";\r\n\r\nimport \"./index.scss\";\r\nimport { ChevronLeft } from \"../../../assets/icons/chevronLeft\";\r\nimport { ChevronRight } from \"../../../assets/icons/chevronRight\";\r\n\r\nconst PostNavigation = ({ data, selectedCategory }) => {\r\n  const { next, previous } = data;\r\n  const preTitle = previous?.frontmatter.title || \"\";\r\n  const nextTitle = next?.frontmatter.title || \"\";\r\n\r\n  const handleClick = (slug) => {\r\n    const category = selectedCategory;\r\n    navigate(`${slug}?${qs.stringify({ category })}#blog`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"postNavigation\">\r\n      <div\r\n        onClick={() => {\r\n          handleClick(previous?.fields.slug);\r\n        }}\r\n      >\r\n        {previous && (\r\n          <div className=\"postNavButton\">\r\n            <ChevronLeft />\r\n            {preTitle}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          handleClick(next?.fields.slug);\r\n        }}\r\n      >\r\n        {next && (\r\n          <div className=\"postNavButton\">\r\n            {nextTitle}\r\n            <ChevronRight />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PostNavigation;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Bio from \"../components/bio\";\r\nimport PostContent from \"../components/post-content\";\r\nimport PostHeader from \"../components/post-header\";\r\nimport PostNavigation from \"../components/post-navigation\";\r\n\r\nimport { useCategory } from \"../hooks/useCategory\";\r\nimport { usePagination } from \"../hooks/usePagination\";\r\n\r\nimport { PAGE } from \"../constants\";\r\nimport { Layout } from \"../layout\";\r\nimport \"./blog-post.scss\";\r\n\r\nconst BlogPost = ({ data, pageContext }) => {\r\n  const { markdownRemark, allMarkdownRemark } = data;\r\n  const { frontmatter, html } = markdownRemark;\r\n  const { handleSelect, selectedCategory } = useCategory();\r\n  const { currentPage, handlePageChange } = usePagination({\r\n    totalCount: allMarkdownRemark.totalCount,\r\n    siblingCount: PAGE.SIBLINGCOUNT,\r\n    pageSize: PAGE.PAGESIZE,\r\n  });\r\n\r\n  return (\r\n    <Layout\r\n      handlePageChange={handlePageChange}\r\n      handleSelect={handleSelect}\r\n      selectedCategory={selectedCategory}\r\n      currentPage={currentPage}\r\n    >\r\n      <div className=\"templateContainer\">\r\n        <PostHeader data={frontmatter} />\r\n        <PostContent content={html} />\r\n        <PostNavigation\r\n          data={pageContext}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n        <hr />\r\n        <Bio />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nexport const blogQuery = graphql`\r\n  query BlogQuery($slug: String!) {\r\n    allMarkdownRemark {\r\n      totalCount\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","content","React","className","dangerouslySetInnerHTML","__html","data","title","date","selectedCategory","next","previous","preTitle","frontmatter","nextTitle","handleClick","slug","category","navigate","qs","onClick","fields","ChevronLeft","ChevronRight","pageContext","markdownRemark","allMarkdownRemark","html","handleSelect","useCategory","currentPage","handlePageChange","usePagination","totalCount","siblingCount","PAGE","SIBLINGCOUNT","pageSize","PAGESIZE","Layout","PostHeader","PostContent","PostNavigation","Bio"],"sourceRoot":""}